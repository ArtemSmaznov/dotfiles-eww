(deflisten music-state
           :initial "stopped"
           "~/.local/bin/listen-player.sh state mpd")

(deflisten music-volume
         :iniitial "-%"
         "~/.local/bin/listen-player.sh volume mpd")

(deflisten music-flag-loop
           :initial "None" ;; playlist | track
           "~/.local/bin/listen-player.sh loop mpd")

(deflisten music-flag-shuffle
           :initial false ;; true
           "~/.local/bin/listen-player.sh shuffle mpd")

(deflisten music-flags
           :initial "[------]" ;; [rzscxU]
           "~/.local/bin/listen-player.sh flags mpd")

(deflisten music-flag-repeat
           :initial "-" ;; r
           "~/.local/bin/listen-player.sh repeat mpd")

(deflisten music-flag-random
           :initial "-" ;; z
           "~/.local/bin/listen-player.sh random mpd")

(deflisten music-flag-single
           :initial "-" ;; s
           "~/.local/bin/listen-player.sh single mpd")

(deflisten music-flag-consume
           :initial "-" ;; c
           "~/.local/bin/listen-player.sh consume mpd")

(deflisten music-flag-crossfade
           :initial "-" ;; x
           "~/.local/bin/listen-player.sh crossfade mpd")

(deflisten music-flag-update
           :initial "-" ;; u
           "~/.local/bin/listen-player.sh update mpd")

(deflisten music-title
           :initial ""
           "~/.local/bin/listen-player.sh title mpd")

(deflisten music-artist
           :initial ""
           "~/.local/bin/listen-player.sh artist mpd")

(deflisten music-album
           :initial ""
           "~/.local/bin/listen-player.sh album mpd")

(defpoll music-track-progress
           :interval "1s"
           :initial 0
           :run-while { music-state == "playing" }
           "~/.local/bin/get-music.sh progress")

(deflisten music-track-file
           :initial ""
           "~/.local/bin/listen-player.sh track_file mpd")

(deflisten music-rating
           :initial 0
           "~/.local/bin/listen-player.sh rating")

(deflisten music-play-count
           :initial 0
           "~/.local/bin/listen-player.sh play_count")

(deflisten music-skip-count
           :initial 0
           "~/.local/bin/listen-player.sh skip_count")

(deflisten music-last-played
           :initial 0
           "~/.local/bin/listen-player.sh last_played")

(deflisten music-album-cover-file
           :initial "/home/artem/music/no-cover"
           "~/.local/bin/listen-player.sh cover_file mpd")

(deflisten music-album-cover-color
         "~/.local/bin/listen-player.sh cover_color mpd")
